name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql+asyncpg://test_user:test_pass@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      POSTGRES_HOST: localhost
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_DB: test_db
      REDIS_HOST: localhost

      # ✅ Celery-related environment variables
      BROKER_URL: redis://localhost:6379/0
      RESULT_BACKEND: redis://localhost:6379/1
      
      # ✅ Add Celery variables from secrets
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}

      # ✅ FIX: Use SECURITY_CSRF_SECRET to match SecurityConfig
      SECURITY_CSRF_SECRET: ${{ secrets.SECURITY_CSRF_SECRET }}

      # ✅ Add EXTERNAL_ third-party dummy secrets for ThirdPartyConfig
      EXTERNAL_RAZORPAY_KEY_ID: ${{ secrets.EXTERNAL_RAZORPAY_KEY_ID }}
      EXTERNAL_RAZORPAY_KEY_SECRET: ${{ secrets.EXTERNAL_RAZORPAY_KEY_SECRET }}
      EXTERNAL_RAZORPAY_WEBHOOK_SECRET: ${{ secrets.EXTERNAL_RAZORPAY_WEBHOOK_SECRET }}
      EXTERNAL_AWS_ACCESS_KEY_ID: ${{ secrets.EXTERNAL_AWS_ACCESS_KEY_ID }}
      EXTERNAL_AWS_SECRET_ACCESS_KEY: ${{ secrets.EXTERNAL_AWS_SECRET_ACCESS_KEY }}
      EXTERNAL_AWS_S3_BUCKET: ${{ secrets.EXTERNAL_AWS_S3_BUCKET }}
      EXTERNAL_SMS_API_KEY: ${{ secrets.EXTERNAL_SMS_API_KEY }}
      EXTERNAL_SMS_SENDER_ID: ${{ secrets.EXTERNAL_SMS_SENDER_ID }}
      EXTERNAL_SMTP_HOST: ${{ secrets.EXTERNAL_SMTP_HOST }}
      EXTERNAL_SMTP_USER: ${{ secrets.EXTERNAL_SMTP_USER }}
      EXTERNAL_SMTP_PASSWORD: ${{ secrets.EXTERNAL_SMTP_PASSWORD }}
      EXTERNAL_SMTP_FROM_EMAIL: ${{ secrets.EXTERNAL_SMTP_FROM_EMAIL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show backend layout
        run: |
          pwd
          ls -la
          ls -la backend
          ls -la backend/app

      - name: Set up Python, install dependencies, and run tests
        working-directory: ./backend
        env:
          PYTHONPATH: ${{ github.workspace }}/backend
          DB_POSTGRES_HOST: localhost
          DB_POSTGRES_USER: test_user
          DB_POSTGRES_PASSWORD: test_pass
          DB_POSTGRES_DB: test_db
          DB_REDIS_HOST: localhost
          AUTH_JWT_SECRET_KEY: testsecret

          # ✅ Include Celery vars here too, just to be safe
          BROKER_URL: redis://localhost:6379/0
          RESULT_BACKEND: redis://localhost:6379/1
          
          # ✅ Add Celery variables from secrets
          CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}

          # ✅ FIX: Use SECURITY_CSRF_SECRET to match SecurityConfig
          SECURITY_CSRF_SECRET: ${{ secrets.SECURITY_CSRF_SECRET }}

          # ✅ Add EXTERNAL_ third-party dummy secrets for ThirdPartyConfig
          EXTERNAL_RAZORPAY_KEY_ID: ${{ secrets.EXTERNAL_RAZORPAY_KEY_ID }}
          EXTERNAL_RAZORPAY_KEY_SECRET: ${{ secrets.EXTERNAL_RAZORPAY_KEY_SECRET }}
          EXTERNAL_RAZORPAY_WEBHOOK_SECRET: ${{ secrets.EXTERNAL_RAZORPAY_WEBHOOK_SECRET }}
          EXTERNAL_AWS_ACCESS_KEY_ID: ${{ secrets.EXTERNAL_AWS_ACCESS_KEY_ID }}
          EXTERNAL_AWS_SECRET_ACCESS_KEY: ${{ secrets.EXTERNAL_AWS_SECRET_ACCESS_KEY }}
          EXTERNAL_AWS_S3_BUCKET: ${{ secrets.EXTERNAL_AWS_S3_BUCKET }}
          EXTERNAL_SMS_API_KEY: ${{ secrets.EXTERNAL_SMS_API_KEY }}
          EXTERNAL_SMS_SENDER_ID: ${{ secrets.EXTERNAL_SMS_SENDER_ID }}
          EXTERNAL_SMTP_HOST: ${{ secrets.EXTERNAL_SMTP_HOST }}
          EXTERNAL_SMTP_USER: ${{ secrets.EXTERNAL_SMTP_USER }}
          EXTERNAL_SMTP_PASSWORD: ${{ secrets.EXTERNAL_SMTP_PASSWORD }}
          EXTERNAL_SMTP_FROM_EMAIL: ${{ secrets.EXTERNAL_SMTP_FROM_EMAIL }}

        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r ../requirements.txt
          pytest app/tests
